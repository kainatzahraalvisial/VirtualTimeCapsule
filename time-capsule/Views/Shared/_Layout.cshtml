<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - VirtualTimeCapsule</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>
    <script type="importmap">
        {
            "imports": {
                "three": "https://cdn.jsdelivr.net/npm/three@0.152.2/build/three.module.js",
                "three/addons/": "https://cdn.jsdelivr.net/npm/three@0.152.2/examples/jsm/"
            }
        }
    </script>
</head>
<body class="bg-black text-white d-flex flex-column min-vh-100">
    <header>
        <nav class="navbar navbar-dark fixed-top">
            <div class="container-fluid px-4 d-flex justify-content-between align-items-center">
                <a class="navbar-brand cosmic-brand" asp-controller="Home" asp-action="Index">VirtualTimeCapsule</a>
                <div class="d-flex align-items-center">
                    <a class="nav-link cosmic-link" asp-controller="Home" asp-action="Index">Home</a>
                    <a class="nav-link cosmic-link" asp-controller="About" asp-action="Index">About</a>
                    <a class="nav-link cosmic-link" asp-controller="Contact" asp-action="Index">Contact</a>
                    @if (User?.Identity?.IsAuthenticated == true)
                    {
                        <a class="nav-link cosmic-link" asp-controller="Dashboard" asp-action="Index">Dashboard</a>
                        <a class="nav-link cosmic-link" asp-controller="Account" asp-action="Logout">Logout</a>
                    }
                    else
                    {
                        <a class="nav-link cosmic-link" asp-controller="Account" asp-action="Login">Login</a>
                        <a class="cosmic-button ms-4" asp-controller="Account" asp-action="Signup">Sign Up</a>
                    }
                </div>
            </div>
        </nav>
    </header>
    <div class="d-flex flex-grow-1">
        @if (User?.Identity?.IsAuthenticated == true && ViewData["Title"]?.ToString() == "Dashboard")
        {
            <button class="sidebar-toggle btn btn-dark position-fixed" id="sidebarToggle">
                <i class="bi bi-list"></i>
            </button>
            <nav class="sidebar collapsed" id="sidebar">
                <div class="sidebar-sticky">
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <a class="nav-link cosmic-link @(ViewData["DashboardSection"]?.ToString() == "Welcome" ? "active" : "")" asp-controller="Dashboard" asp-action="Index">Dashboard</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link cosmic-link @(ViewData["DashboardSection"]?.ToString() == "MyCapsules" ? "active" : "")" asp-controller="Dashboard" asp-action="MyCapsules">My Capsules</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link cosmic-link @(ViewData["DashboardSection"]?.ToString() == "CreateCapsules" ? "active" : "")" asp-controller="Dashboard" asp-action="Create">Create Capsule</a>
                        </li>
                        <li class="nav-item position-relative">
                            <a class="nav-link cosmic-link @(ViewData["DashboardSection"]?.ToString() == "Notifications" ? "active" : "")" asp-controller="Dashboard" asp-action="Notifications">
                                Notifications
                                @{
                                    int? unreadNotifications = ViewData["UnreadNotifications"] as int?;
                                    if (unreadNotifications.HasValue && unreadNotifications.Value > 0)
                                    {
                                        <span class="position-absolute top-0 start-100 translate-middle p-2 bg-danger border border-light rounded-circle">
                                            <span class="visually-hidden">New notifications</span>
                                        </span>
                                    }
                                }
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link cosmic-link @(ViewData["DashboardSection"]?.ToString() == "Profile" ? "active" : "")" asp-controller="Dashboard" asp-action="Profile">Profile</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link cosmic-link" asp-controller="Account" asp-action="Logout">Logout</a>
                        </li>
                    </ul>
                    <div class="theme-toggle p-3">
                        <label class="switch">
                            <input type="checkbox" id="themeToggle">
                            <span class="slider round"></span>
                        </label>
                        <span class="ms-2 theme-label">Dark Mode</span>
                    </div>
                </div>
            </nav>
        }
        <main role="main" class="flex-grow-1">
            @if (User?.Identity?.IsAuthenticated == true && ViewData["Title"]?.ToString() == "Dashboard")
            {
                <div class="dashboard-content p-4">
                    <div id="particles-js" class="position-fixed top-0 start-0 w-100 h-100"></div>
                    @{
                        bool noFrostedBox = ViewData["NoFrostedBox"] as bool? ?? false;
                    }
                    <div class="main-content-area @(noFrostedBox ? "no-frosted-box" : "")" id="mainContentArea">
                        @RenderBody()
                    </div>
                </div>
            }
            else
            {
                @RenderBody()
            }
        </main>
    </div>
    <footer class="footer-section text-center">
        <div class="container-fluid px-4">
            <p class="mb-0">© 2025 VirtualTimeCapsule. All rights reserved.</p>
            <div class="mt-2">
                <a href="#" class="social-icon me-3"><i class="bi bi-facebook"></i></a>
                <a href="#" class="social-icon me-3"><i class="bi bi-twitter"></i></a>
                <a href="#" class="social-icon me-3"><i class="bi bi-instagram"></i></a>
                <a href="#" class="social-icon"><i class="bi bi-linkedin"></i></a>
            </div>
        </div>
    </footer>
    @RenderSection("Scripts", required: false)
    <script>
        $(document).ready(function () {
            console.log("Document ready, binding sidebar toggle");
            $("#sidebarToggle").on("click", function () {
                console.log("Sidebar toggle clicked");
                $("#sidebar").toggleClass("collapsed");
                $(".dashboard-content").toggleClass("expanded");
            });

            const themeToggle = document.getElementById('themeToggle');
            const themeLabel = document.querySelector('.theme-label');
            const body = document.body;

            function setTheme(isDark) {
                if (isDark) {
                    body.classList.remove('light-mode');
                    themeLabel.textContent = 'Dark Mode';
                    themeToggle.checked = true;
                } else {
                    body.classList.add('light-mode');
                    themeLabel.textContent = 'Light Mode';
                    themeToggle.checked = false;
                }
            }

            if (localStorage.getItem('theme') === 'light') {
                setTheme(false);
            } else {
                setTheme(true);
                localStorage.setItem('theme', 'dark');
            }

            themeToggle.addEventListener('change', () => {
                if (themeToggle.checked) {
                    setTheme(true);
                    localStorage.setItem('theme', 'dark');
                } else {
                    setTheme(false);
                    localStorage.setItem('theme', 'light');
                }
            });
        });
    </script>
</body>
</html>